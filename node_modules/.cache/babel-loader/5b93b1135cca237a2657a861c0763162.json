{"ast":null,"code":"\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst AbstractDialect = require(\"../abstract\");\n\nconst ConnectionManager = require(\"./connection-manager\");\n\nconst Query = require(\"./query\");\n\nconst QueryGenerator = require(\"./query-generator\");\n\nconst DataTypes = require(\"../../data-types\").mysql;\n\nconst {\n  MySQLQueryInterface\n} = require(\"./query-interface\");\n\nclass MysqlDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new MySQLQueryInterface(sequelize, this.queryGenerator);\n  }\n\n}\n\nMysqlDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  \"VALUES ()\": true,\n  \"LIMIT ON UPDATE\": true,\n  lock: true,\n  forShare: \"LOCK IN SHARE MODE\",\n  settingIsolationLevelDuringTransaction: false,\n  inserts: {\n    ignoreDuplicates: \" IGNORE\",\n    updateOnDuplicate: \" ON DUPLICATE KEY UPDATE\"\n  },\n  index: {\n    collate: false,\n    length: true,\n    parser: true,\n    type: true,\n    using: 1\n  },\n  constraints: {\n    dropConstraint: false,\n    check: false\n  },\n  indexViaAlter: true,\n  indexHints: true,\n  NUMERIC: true,\n  GEOMETRY: true,\n  JSON: true,\n  REGEXP: true\n});\nMysqlDialect.prototype.defaultVersion = \"5.7.0\";\nMysqlDialect.prototype.Query = Query;\nMysqlDialect.prototype.QueryGenerator = QueryGenerator;\nMysqlDialect.prototype.DataTypes = DataTypes;\nMysqlDialect.prototype.name = \"mysql\";\nMysqlDialect.prototype.TICK_CHAR = \"`\";\nMysqlDialect.prototype.TICK_CHAR_LEFT = MysqlDialect.prototype.TICK_CHAR;\nMysqlDialect.prototype.TICK_CHAR_RIGHT = MysqlDialect.prototype.TICK_CHAR;\nmodule.exports = MysqlDialect;","map":{"version":3,"mappings":";;AAEA,MAAMA,IAAIC,QAAQ,QAAR,CAAV;;AACA,MAAMC,kBAAkBD,QAAQ,aAAR,CAAxB;;AACA,MAAME,oBAAoBF,QAAQ,sBAAR,CAA1B;;AACA,MAAMG,QAAQH,QAAQ,SAAR,CAAd;;AACA,MAAMI,iBAAiBJ,QAAQ,mBAAR,CAAvB;;AACA,MAAMK,YAAYL,QAAQ,kBAAR,EAA4BM,KAA9C;;AACA,MAAM;AAAEC;AAAF,IAA0BP,QAAQ,mBAAR,CAAhC;;AAEA,2BAA2BC,eAA3B,CAA2C;AACzCO,cAAYC,SAAZ,EAAuB;AACrB;AACA,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,iBAAL,GAAyB,IAAIR,iBAAJ,CAAsB,IAAtB,EAA4BO,SAA5B,CAAzB;AACA,SAAKE,cAAL,GAAsB,IAAIP,cAAJ,CAAmB;AACvCQ,gBAAU,IAD6B;AAEvCH;AAFuC,KAAnB,CAAtB;AAIA,SAAKI,cAAL,GAAsB,IAAIN,mBAAJ,CACpBE,SADoB,EAEpB,KAAKE,cAFe,CAAtB;AAEO;;AAXgC;;AAgB3CG,aAAaC,SAAb,CAAuBC,QAAvB,GAAkCjB,EAAEkB,KAAF,CAChClB,EAAEmB,SAAF,CAAYjB,gBAAgBc,SAAhB,CAA0BC,QAAtC,CADgC,EAEhC;AACE,eAAa,IADf;AAEE,qBAAmB,IAFrB;AAGEG,QAAM,IAHR;AAIEC,YAAU,oBAJZ;AAKEC,0CAAwC,KAL1C;AAMEC,WAAS;AACPC,sBAAkB,SADX;AAEPC,uBAAmB;AAFZ,GANX;AAUEC,SAAO;AACLC,aAAS,KADJ;AAELC,YAAQ,IAFH;AAGLC,YAAQ,IAHH;AAILC,UAAM,IAJD;AAKLC,WAAO;AALF,GAVT;AAiBEC,eAAa;AACXC,oBAAgB,KADL;AAEXC,WAAO;AAFI,GAjBf;AAqBEC,iBAAe,IArBjB;AAsBEC,cAAY,IAtBd;AAuBEC,WAAS,IAvBX;AAwBEC,YAAU,IAxBZ;AAyBEC,QAAM,IAzBR;AA0BEC,UAAQ;AA1BV,CAFgC,CAAlC;AAgCAzB,aAAaC,SAAb,CAAuByB,cAAvB,GAAwC,OAAxC;AACA1B,aAAaC,SAAb,CAAuBZ,KAAvB,GAA+BA,KAA/B;AACAW,aAAaC,SAAb,CAAuBX,cAAvB,GAAwCA,cAAxC;AACAU,aAAaC,SAAb,CAAuBV,SAAvB,GAAmCA,SAAnC;AACAS,aAAaC,SAAb,CAAuB0B,IAAvB,GAA8B,OAA9B;AACA3B,aAAaC,SAAb,CAAuB2B,SAAvB,GAAmC,GAAnC;AACA5B,aAAaC,SAAb,CAAuB4B,cAAvB,GAAwC7B,aAAaC,SAAb,CAAuB2B,SAA/D;AACA5B,aAAaC,SAAb,CAAuB6B,eAAvB,GAAyC9B,aAAaC,SAAb,CAAuB2B,SAAhE;AAEAG,OAAOC,OAAP,GAAiBhC,YAAjB","names":["_","require","AbstractDialect","ConnectionManager","Query","QueryGenerator","DataTypes","mysql","MySQLQueryInterface","constructor","sequelize","connectionManager","queryGenerator","_dialect","queryInterface","MysqlDialect","prototype","supports","merge","cloneDeep","lock","forShare","settingIsolationLevelDuringTransaction","inserts","ignoreDuplicates","updateOnDuplicate","index","collate","length","parser","type","using","constraints","dropConstraint","check","indexViaAlter","indexHints","NUMERIC","GEOMETRY","JSON","REGEXP","defaultVersion","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports"],"sources":["C:\\Users\\jorda\\OneDrive\\Desktop\\berecoapp\\node_modules\\sequelize\\src\\dialects\\mysql\\index.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').mysql;\nconst { MySQLQueryInterface } = require('./query-interface');\n\nclass MysqlDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new MySQLQueryInterface(\n      sequelize,\n      this.queryGenerator\n    );\n  }\n}\n\nMysqlDialect.prototype.supports = _.merge(\n  _.cloneDeep(AbstractDialect.prototype.supports),\n  {\n    'VALUES ()': true,\n    'LIMIT ON UPDATE': true,\n    lock: true,\n    forShare: 'LOCK IN SHARE MODE',\n    settingIsolationLevelDuringTransaction: false,\n    inserts: {\n      ignoreDuplicates: ' IGNORE',\n      updateOnDuplicate: ' ON DUPLICATE KEY UPDATE'\n    },\n    index: {\n      collate: false,\n      length: true,\n      parser: true,\n      type: true,\n      using: 1\n    },\n    constraints: {\n      dropConstraint: false,\n      check: false\n    },\n    indexViaAlter: true,\n    indexHints: true,\n    NUMERIC: true,\n    GEOMETRY: true,\n    JSON: true,\n    REGEXP: true\n  }\n);\n\nMysqlDialect.prototype.defaultVersion = '5.7.0'; // minimum supported version\nMysqlDialect.prototype.Query = Query;\nMysqlDialect.prototype.QueryGenerator = QueryGenerator;\nMysqlDialect.prototype.DataTypes = DataTypes;\nMysqlDialect.prototype.name = 'mysql';\nMysqlDialect.prototype.TICK_CHAR = '`';\nMysqlDialect.prototype.TICK_CHAR_LEFT = MysqlDialect.prototype.TICK_CHAR;\nMysqlDialect.prototype.TICK_CHAR_RIGHT = MysqlDialect.prototype.TICK_CHAR;\n\nmodule.exports = MysqlDialect;\n"]},"metadata":{},"sourceType":"script"}