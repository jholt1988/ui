{"ast":null,"code":"\"use strict\";\n\nconst uuidv4 = require(\"uuid\").v4;\n\nconst TransactionQueries = {\n  setIsolationLevelQuery(value, options) {\n    if (options.parent) {\n      return;\n    }\n\n    return `SET TRANSACTION ISOLATION LEVEL ${value};`;\n  },\n\n  generateTransactionId() {\n    return uuidv4();\n  },\n\n  startTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return `SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return \"START TRANSACTION;\";\n  },\n\n  deferConstraintsQuery() {},\n\n  setConstraintQuery() {},\n\n  setDeferredQuery() {},\n\n  setImmediateQuery() {},\n\n  commitTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return;\n    }\n\n    return \"COMMIT;\";\n  },\n\n  rollbackTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return `ROLLBACK TO SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return \"ROLLBACK;\";\n  }\n\n};\nmodule.exports = TransactionQueries;","map":{"version":3,"mappings":";;AAEA,MAAMA,SAASC,QAAQ,MAAR,EAAgBC,EAA/B;;AAEA,MAAMC,qBAAqB;AASzBC,yBAAuBC,KAAvB,EAA8BC,OAA9B,EAAuC;AACrC,QAAIA,QAAQC,MAAZ,EAAoB;AAClB;AAAA;;AAGF,WAAO,mCAAmCF,QAA1C;AAA0C,GAdnB;;AAiBzBG,0BAAwB;AACtB,WAAOR,QAAP;AAAO,GAlBgB;;AA4BzBS,wBAAsBC,WAAtB,EAAmC;AACjC,QAAIA,YAAYH,MAAhB,EAAwB;AAEtB,aAAO,aAAa,KAAKI,eAAL,CAAqBD,YAAYE,IAAjC,EAAuC,IAAvC,CAAuC,GAA3D;AAA2D;;AAG7D,WAAO,oBAAP;AAAO,GAlCgB;;AAqCzBC,0BAAwB,EArCC;;AAuCzBC,uBAAqB,EAvCI;;AAwCzBC,qBAAmB,EAxCM;;AAyCzBC,sBAAoB,EAzCK;;AAkDzBC,yBAAuBP,WAAvB,EAAoC;AAClC,QAAIA,YAAYH,MAAhB,EAAwB;AACtB;AAAA;;AAGF,WAAO,SAAP;AAAO,GAvDgB;;AAiEzBW,2BAAyBR,WAAzB,EAAsC;AACpC,QAAIA,YAAYH,MAAhB,EAAwB;AAEtB,aAAO,yBAAyB,KAAKI,eAAL,CAAqBD,YAAYE,IAAjC,EAAuC,IAAvC,CAAuC,GAAvE;AAAuE;;AAGzE,WAAO,WAAP;AAAO;;AAvEgB,CAA3B;AA2EAO,OAAOC,OAAP,GAAiBjB,kBAAjB","names":["uuidv4","require","v4","TransactionQueries","setIsolationLevelQuery","value","options","parent","generateTransactionId","startTransactionQuery","transaction","quoteIdentifier","name","deferConstraintsQuery","setConstraintQuery","setDeferredQuery","setImmediateQuery","commitTransactionQuery","rollbackTransactionQuery","module","exports"],"sources":["C:\\Users\\jorda\\OneDrive\\Desktop\\berecoapp\\node_modules\\sequelize\\src\\dialects\\abstract\\query-generator\\transaction.js"],"sourcesContent":["'use strict';\n\nconst uuidv4 = require('uuid').v4;\n\nconst TransactionQueries = {\n  /**\n   * Returns a query that sets the transaction isolation level.\n   *\n   * @param  {string} value   The isolation level.\n   * @param  {object} options An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  setIsolationLevelQuery(value, options) {\n    if (options.parent) {\n      return;\n    }\n\n    return `SET TRANSACTION ISOLATION LEVEL ${value};`;\n  },\n\n  generateTransactionId() {\n    return uuidv4();\n  },\n\n  /**\n   * Returns a query that starts a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  startTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'START TRANSACTION;';\n  },\n\n  deferConstraintsQuery() {},\n\n  setConstraintQuery() {},\n  setDeferredQuery() {},\n  setImmediateQuery() {},\n\n  /**\n   * Returns a query that commits a transaction.\n   *\n   * @param  {Transaction} transaction An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  commitTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return;\n    }\n\n    return 'COMMIT;';\n  },\n\n  /**\n   * Returns a query that rollbacks a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  rollbackTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `ROLLBACK TO SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'ROLLBACK;';\n  }\n};\n\nmodule.exports = TransactionQueries;\n"]},"metadata":{},"sourceType":"script"}