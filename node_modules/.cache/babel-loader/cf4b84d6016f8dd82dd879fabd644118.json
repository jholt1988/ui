{"ast":null,"code":"const {\n  forEach,\n  get\n} = require('lodash');\n\nconst {\n  DataTypes,\n  Model\n} = require('sequelize');\n\nconst {\n  Order\n} = require('../../db');\n\nmodule.exports = sequelize => {\n  class OrderModel extends Model {\n    static changeStatus() {\n      if (this.status === \"PLACED\") {\n        return this.status = \"APPROVED\";\n      } else if (this.status === \"APPROVED\") {\n        return this.status = \"SHIPPED\";\n      } else if (this.status === \"SHIPPED\") {\n        return this.status = \"DELIVERED\";\n      }\n    }\n\n  }\n\n  OrderModel.init({\n    id: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true\n    },\n    total: {\n      type: DataTypes.DECIMAL,\n      allowNull: false\n    },\n    items: {\n      type: DataTypes.ARRAY(DataTypes.STRING, {\n        values: {\n          references: {\n            model: 'Order Item',\n            key: 'id'\n          }\n        }\n      })\n    },\n    status: {\n      type: DataTypes.ENUM({\n        values: ['PLACED', 'APPROVED', 'SHIPPED', 'DELIVERED']\n      }),\n      defaultValue: 'PLACED'\n    }\n  }, {\n    sequelize,\n    modelName: 'Order'\n  });\n  return OrderModel;\n};","map":{"version":3,"sources":["C:/Users/jorda/OneDrive/Desktop/berecoapp/node_modules/berecoapi2.0/Models/Orders/Orders.js"],"names":["forEach","get","require","DataTypes","Model","Order","module","exports","sequelize","OrderModel","changeStatus","status","init","id","type","UUID","defaultValue","UUIDV4","primaryKey","total","DECIMAL","allowNull","items","ARRAY","STRING","values","references","model","key","ENUM","modelName"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAmBC,OAAO,CAAC,QAAD,CAAhC;;AACA,MAAM;AAAGC,EAAAA,SAAH;AAAcC,EAAAA;AAAd,IAAwBF,OAAO,CAAC,WAAD,CAArC;;AACA,MAAM;AAACG,EAAAA;AAAD,IAAUH,OAAO,CAAC,UAAD,CAAvB;;AAEAI,MAAM,CAACC,OAAP,GAAiBC,SAAD,IAAe;AAC3B,QAAMC,UAAN,SAAyBL,KAAzB,CAA+B;AACT,WAAZM,YAAY,GAAG;AACjB,UAAI,KAAKC,MAAL,KAAgB,QAApB,EAA8B;AAC1B,eAAO,KAAKA,MAAL,GAAc,UAArB;AACH,OAFD,MAEO,IAAI,KAAKA,MAAL,KAAgB,UAApB,EAAgC;AACnC,eAAO,KAAKA,MAAL,GAAc,SAArB;AACH,OAFM,MAEA,IAAG,KAAKA,MAAL,KAAgB,SAAnB,EAA8B;AACjC,eAAO,KAAKA,MAAL,GAAc,WAArB;AACH;AACJ;;AAT0B;;AAY/BF,EAAAA,UAAU,CAACG,IAAX,CAAgB;AACZC,IAAAA,EAAE,EAAE;AACAC,MAAAA,IAAI,EAAEX,SAAS,CAACY,IADhB;AAEAC,MAAAA,YAAY,EAAEb,SAAS,CAACc,MAFxB;AAGAC,MAAAA,UAAU,EAAE;AAHZ,KADQ;AAMZC,IAAAA,KAAK,EAAE;AACHL,MAAAA,IAAI,EAAEX,SAAS,CAACiB,OADb;AAEHC,MAAAA,SAAS,EAAE;AAFR,KANK;AAWZC,IAAAA,KAAK,EAAE;AACHR,MAAAA,IAAI,EAAEX,SAAS,CAACoB,KAAV,CAAgBpB,SAAS,CAACqB,MAA1B,EAAkC;AACpCC,QAAAA,MAAM,EAAE;AACJC,UAAAA,UAAU,EAAE;AACRC,YAAAA,KAAK,EAAE,YADC;AAERC,YAAAA,GAAG,EAAE;AAFG;AADR;AAD4B,OAAlC;AADH,KAXK;AAsBZjB,IAAAA,MAAM,EAAE;AACJG,MAAAA,IAAI,EAAEX,SAAS,CAAC0B,IAAV,CAAe;AACjBJ,QAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB,EAAkC,WAAlC;AADS,OAAf,CADF;AAKJT,MAAAA,YAAY,EAAE;AALV;AAtBI,GAAhB,EA6BG;AAACR,IAAAA,SAAD;AAAYsB,IAAAA,SAAS,EAAC;AAAtB,GA7BH;AA8BD,SAAOrB,UAAP;AACF,CA5CD","sourcesContent":["const { forEach, get } = require('lodash');\r\nconst {  DataTypes, Model } = require('sequelize');\r\nconst {Order} = require('../../db')\r\n\r\nmodule.exports =(sequelize) => {\r\n    class OrderModel extends Model {\r\n       static changeStatus() {\r\n            if (this.status === \"PLACED\") {\r\n                return this.status = \"APPROVED\"\r\n            } else if (this.status === \"APPROVED\") {\r\n                return this.status = \"SHIPPED\"\r\n            } else if(this.status === \"SHIPPED\") {\r\n                return this.status = \"DELIVERED\"\r\n            }\r\n        }\r\n    }\r\n    \r\n    OrderModel.init({\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            defaultValue: DataTypes.UUIDV4,\r\n            primaryKey: true\r\n        },\r\n        total: {\r\n            type: DataTypes.DECIMAL,\r\n            allowNull: false,\r\n            \r\n        },\r\n        items: {\r\n            type: DataTypes.ARRAY(DataTypes.STRING, {\r\n                values: {\r\n                    references: {\r\n                        model: 'Order Item',\r\n                        key: 'id'\r\n                }}\r\n            })\r\n           \r\n        },\r\n       \r\n        status: {\r\n            type: DataTypes.ENUM({\r\n                values: ['PLACED', 'APPROVED', 'SHIPPED', 'DELIVERED']\r\n            })\r\n            ,\r\n            defaultValue: 'PLACED'\r\n      }\r\n    }, {sequelize, modelName:'Order'})\r\n   return OrderModel\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"script"}