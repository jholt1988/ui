{"ast":null,"code":"'use strict';\n\nvar loader = require('./lib/loader');\n\nvar dumper = require('./lib/dumper');\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' + 'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\nmodule.exports.Type = require('./lib/type');\nmodule.exports.Schema = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA = require('./lib/schema/default');\nmodule.exports.load = loader.load;\nmodule.exports.loadAll = loader.loadAll;\nmodule.exports.dump = dumper.dump;\nmodule.exports.YAMLException = require('./lib/exception'); // Re-export all types in case user wants to create custom schema\n\nmodule.exports.types = {\n  binary: require('./lib/type/binary'),\n  float: require('./lib/type/float'),\n  map: require('./lib/type/map'),\n  null: require('./lib/type/null'),\n  pairs: require('./lib/type/pairs'),\n  set: require('./lib/type/set'),\n  timestamp: require('./lib/type/timestamp'),\n  bool: require('./lib/type/bool'),\n  int: require('./lib/type/int'),\n  merge: require('./lib/type/merge'),\n  omap: require('./lib/type/omap'),\n  seq: require('./lib/type/seq'),\n  str: require('./lib/type/str')\n}; // Removed functions from JS-YAML 3.0.x\n\nmodule.exports.safeLoad = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump = renamed('safeDump', 'dump');","map":{"version":3,"sources":["C:/Users/jorda/OneDrive/Desktop/berecoapp/node_modules/js-yaml/index.js"],"names":["loader","require","dumper","renamed","from","to","Error","module","exports","Type","Schema","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SCHEMA","load","loadAll","dump","YAMLException","types","binary","float","map","null","pairs","set","timestamp","bool","int","merge","omap","seq","str","safeLoad","safeLoadAll","safeDump"],"mappings":"AAAA;;AAGA,IAAIA,MAAM,GAAGC,OAAO,CAAC,cAAD,CAApB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAD,CAApB;;AAGA,SAASE,OAAT,CAAiBC,IAAjB,EAAuBC,EAAvB,EAA2B;AACzB,SAAO,YAAY;AACjB,UAAM,IAAIC,KAAJ,CAAU,mBAAmBF,IAAnB,GAA0B,4BAA1B,GACd,WADc,GACAC,EADA,GACK,yCADf,CAAN;AAED,GAHD;AAID;;AAGDE,MAAM,CAACC,OAAP,CAAeC,IAAf,GAAqCR,OAAO,CAAC,YAAD,CAA5C;AACAM,MAAM,CAACC,OAAP,CAAeE,MAAf,GAAqCT,OAAO,CAAC,cAAD,CAA5C;AACAM,MAAM,CAACC,OAAP,CAAeG,eAAf,GAAqCV,OAAO,CAAC,uBAAD,CAA5C;AACAM,MAAM,CAACC,OAAP,CAAeI,WAAf,GAAqCX,OAAO,CAAC,mBAAD,CAA5C;AACAM,MAAM,CAACC,OAAP,CAAeK,WAAf,GAAqCZ,OAAO,CAAC,mBAAD,CAA5C;AACAM,MAAM,CAACC,OAAP,CAAeM,cAAf,GAAqCb,OAAO,CAAC,sBAAD,CAA5C;AACAM,MAAM,CAACC,OAAP,CAAeO,IAAf,GAAqCf,MAAM,CAACe,IAA5C;AACAR,MAAM,CAACC,OAAP,CAAeQ,OAAf,GAAqChB,MAAM,CAACgB,OAA5C;AACAT,MAAM,CAACC,OAAP,CAAeS,IAAf,GAAqCf,MAAM,CAACe,IAA5C;AACAV,MAAM,CAACC,OAAP,CAAeU,aAAf,GAAqCjB,OAAO,CAAC,iBAAD,CAA5C,C,CAEA;;AACAM,MAAM,CAACC,OAAP,CAAeW,KAAf,GAAuB;AACrBC,EAAAA,MAAM,EAAKnB,OAAO,CAAC,mBAAD,CADG;AAErBoB,EAAAA,KAAK,EAAMpB,OAAO,CAAC,kBAAD,CAFG;AAGrBqB,EAAAA,GAAG,EAAQrB,OAAO,CAAC,gBAAD,CAHG;AAIrBsB,EAAAA,IAAI,EAAOtB,OAAO,CAAC,iBAAD,CAJG;AAKrBuB,EAAAA,KAAK,EAAMvB,OAAO,CAAC,kBAAD,CALG;AAMrBwB,EAAAA,GAAG,EAAQxB,OAAO,CAAC,gBAAD,CANG;AAOrByB,EAAAA,SAAS,EAAEzB,OAAO,CAAC,sBAAD,CAPG;AAQrB0B,EAAAA,IAAI,EAAO1B,OAAO,CAAC,iBAAD,CARG;AASrB2B,EAAAA,GAAG,EAAQ3B,OAAO,CAAC,gBAAD,CATG;AAUrB4B,EAAAA,KAAK,EAAM5B,OAAO,CAAC,kBAAD,CAVG;AAWrB6B,EAAAA,IAAI,EAAO7B,OAAO,CAAC,iBAAD,CAXG;AAYrB8B,EAAAA,GAAG,EAAQ9B,OAAO,CAAC,gBAAD,CAZG;AAarB+B,EAAAA,GAAG,EAAQ/B,OAAO,CAAC,gBAAD;AAbG,CAAvB,C,CAgBA;;AACAM,MAAM,CAACC,OAAP,CAAeyB,QAAf,GAAqC9B,OAAO,CAAC,UAAD,EAAa,MAAb,CAA5C;AACAI,MAAM,CAACC,OAAP,CAAe0B,WAAf,GAAqC/B,OAAO,CAAC,aAAD,EAAgB,SAAhB,CAA5C;AACAI,MAAM,CAACC,OAAP,CAAe2B,QAAf,GAAqChC,OAAO,CAAC,UAAD,EAAa,MAAb,CAA5C","sourcesContent":["'use strict';\n\n\nvar loader = require('./lib/loader');\nvar dumper = require('./lib/dumper');\n\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nmodule.exports.Type                = require('./lib/type');\nmodule.exports.Schema              = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA      = require('./lib/schema/default');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.YAMLException       = require('./lib/exception');\n\n// Re-export all types in case user wants to create custom schema\nmodule.exports.types = {\n  binary:    require('./lib/type/binary'),\n  float:     require('./lib/type/float'),\n  map:       require('./lib/type/map'),\n  null:      require('./lib/type/null'),\n  pairs:     require('./lib/type/pairs'),\n  set:       require('./lib/type/set'),\n  timestamp: require('./lib/type/timestamp'),\n  bool:      require('./lib/type/bool'),\n  int:       require('./lib/type/int'),\n  merge:     require('./lib/type/merge'),\n  omap:      require('./lib/type/omap'),\n  seq:       require('./lib/type/seq'),\n  str:       require('./lib/type/str')\n};\n\n// Removed functions from JS-YAML 3.0.x\nmodule.exports.safeLoad            = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump            = renamed('safeDump', 'dump');\n"]},"metadata":{},"sourceType":"script"}