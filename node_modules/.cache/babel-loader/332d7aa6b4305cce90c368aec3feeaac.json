{"ast":null,"code":"const {\n  DataTypes,\n  Model\n} = require('sequelize');\n\nconst {\n  Address\n} = require('../../db');\n\nmodule.exports = (sequelize, Sequelize) => {\n  class VendorModel extends Model {\n    static vendorExists = vendorName => {\n      const vendor = this.findOne({\n        vendorName\n      });\n\n      if (vendor) {\n        return true;\n      } else return false;\n    };\n  }\n\n  VendorModel.init({\n    id: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true\n    },\n    vendorName: {\n      type: DataTypes.STRING,\n      allowNull: false\n    }\n  }, {\n    sequelize,\n    modelName: 'Vendor'\n  });\n  return VendorModel;\n};","map":{"version":3,"sources":["C:/Users/jorda/OneDrive/Desktop/berecoapp/node_modules/berecoapi2.0/Models/Store/Vendors.js"],"names":["DataTypes","Model","require","Address","module","exports","sequelize","Sequelize","VendorModel","vendorExists","vendorName","vendor","findOne","init","id","type","UUID","defaultValue","UUIDV4","primaryKey","STRING","allowNull","modelName"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,SAAF;AAAaC,EAAAA;AAAb,IAAuBC,OAAO,CAAC,WAAD,CAApC;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAYD,OAAO,CAAC,UAAD,CAAzB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACvC,QAAOC,WAAP,SAA2BP,KAA3B,CAAgC;AACT,WAAZQ,YAAY,GAAIC,UAAD,IAAgB;AACrC,YAAMC,MAAM,GAAK,KAAKC,OAAL,CAAa;AAACF,QAAAA;AAAD,OAAb,CAAjB;;AACO,UAAGC,MAAH,EAAU;AACN,eAAO,IAAP;AACH,OAFD,MAGA,OAAO,KAAP;AACH,KANc;AADS;;AAW5BH,EAAAA,WAAW,CAACK,IAAZ,CAAiB;AACjBC,IAAAA,EAAE,EAAE;AACAC,MAAAA,IAAI,EAAEf,SAAS,CAACgB,IADhB;AAEAC,MAAAA,YAAY,EAAEjB,SAAS,CAACkB,MAFxB;AAGAC,MAAAA,UAAU,EAAC;AAHX,KADa;AAMjBT,IAAAA,UAAU,EAAE;AACRK,MAAAA,IAAI,EAAEf,SAAS,CAACoB,MADR;AAERC,MAAAA,SAAS,EAAE;AAFH;AANK,GAAjB,EAUC;AAACf,IAAAA,SAAD;AAAYgB,IAAAA,SAAS,EAAE;AAAvB,GAVD;AAYJ,SAAOd,WAAP;AACH,CAzBD","sourcesContent":["const { DataTypes, Model } = require('sequelize');\r\nconst {Address} = require('../../db')\r\n\r\nmodule.exports = (sequelize, Sequelize) => {\r\n    class  VendorModel extends Model{  \r\n        static vendorExists = (vendorName) => {\r\n         const vendor =   this.findOne({vendorName})\r\n                if(vendor){\r\n                    return true\r\n                } else\r\n                return false\r\n            } \r\n        }\r\n        \r\n    \r\n        VendorModel.init({\r\n        id: {\r\n            type: DataTypes.UUID, \r\n            defaultValue: DataTypes.UUIDV4,\r\n            primaryKey:true\r\n        },\r\n        vendorName: {\r\n            type: DataTypes.STRING,\r\n            allowNull: false\r\n        }\r\n      }, {sequelize, modelName: 'Vendor'})\r\n\r\n    return VendorModel\r\n}"]},"metadata":{},"sourceType":"script"}