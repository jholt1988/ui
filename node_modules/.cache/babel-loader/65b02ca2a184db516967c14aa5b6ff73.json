{"ast":null,"code":"const {\n  request\n} = require('express');\n\nconst {\n  User,\n  Profile\n} = require('../db');\n\nexports.LoadById = (req, res) => {\n  const userId = req.params.userId;\n  Profile.findOne({\n    where: {\n      UserId: userId\n    }\n  }).then(data => {\n    if (data) {\n      res.send(data);\n    }\n  }).catch(error => {\n    throw new Error(error);\n  });\n};\n\nexports.UpdateProfile = (req, res) => {\n  const userId = req.params.userId;\n  const {\n    UpdateData: updateData\n  } = req.body;\n  Profile.findOne({\n    where: {\n      UserId: userId\n    }\n  }).then(data => {\n    return Profile.update({\n      data: { ...updateData\n      }\n    }, {\n      where: {\n        id: data.id\n      }\n    });\n  }).then(updateRecord => {\n    if (updateRecord == 1) {\n      res.send(updateRecord);\n    } else {\n      throw new Error();\n    }\n  }).catch(err => {\n    res.send(err.message);\n  });\n};\n\nexports.getAllUsers = (req, res) => {\n  User.findAll().then(users => {\n    res.send(users);\n  });\n};","map":{"version":3,"sources":["C:/Users/jorda/OneDrive/Desktop/berecoapp/node_modules/berecoapi2.0/Services/UserService.js"],"names":["request","require","User","Profile","exports","LoadById","req","res","userId","params","findOne","where","UserId","then","data","send","catch","error","Error","UpdateProfile","UpdateData","updateData","body","update","id","updateRecord","err","message","getAllUsers","findAll","users"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,OAAO,CAAC,SAAD,CAA3B;;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAoBF,OAAO,CAAC,OAAD,CAAjC;;AAEAG,OAAO,CAACC,QAAR,GAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,QAAMC,MAAM,GAAGF,GAAG,CAACG,MAAJ,CAAWD,MAA1B;AACSL,EAAAA,OAAO,CAACO,OAAR,CAAgB;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEJ;AAAV;AAAT,GAAhB,EACIK,IADJ,CACSC,IAAI,IAAI;AACV,QAAIA,IAAJ,EAAU;AACNP,MAAAA,GAAG,CAACQ,IAAJ,CAASD,IAAT;AACH;AACJ,GALJ,EASIE,KATJ,CASUC,KAAK,IAAI;AACZ,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH,GAXJ;AAcR,CAhBD;;AAkBAb,OAAO,CAACe,aAAR,GAAwB,CAACb,GAAD,EAAMC,GAAN,KAAc;AAClC,QAAMC,MAAM,GAAGF,GAAG,CAACG,MAAJ,CAAWD,MAA1B;AACA,QAAM;AAACY,IAAAA,UAAU,EAAEC;AAAb,MAA2Bf,GAAG,CAACgB,IAArC;AACAnB,EAAAA,OAAO,CAACO,OAAR,CAAgB;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEJ;AAAV;AAAT,GAAhB,EACKK,IADL,CACWC,IAAD,IAAU;AAEZ,WAAOX,OAAO,CAACoB,MAAR,CAAe;AAAET,MAAAA,IAAI,EAAE,EAAE,GAAGO;AAAL;AAAR,KAAf,EACG;AAACV,MAAAA,KAAK,EAAE;AAAEa,QAAAA,EAAE,EAAEV,IAAI,CAACU;AAAX;AAAR,KADH,CAAP;AAEH,GALL,EAKOX,IALP,CAKYY,YAAY,IAAI;AACpB,QAAIA,YAAY,IAAI,CAApB,EAAuB;AACnBlB,MAAAA,GAAG,CAACQ,IAAJ,CAASU,YAAT;AACH,KAFD,MAEO;AACF,YAAM,IAAIP,KAAJ,EAAN;AACJ;AACJ,GAXL,EAYKF,KAZL,CAYWU,GAAG,IAAI;AACdnB,IAAAA,GAAG,CAACQ,IAAJ,CAASW,GAAG,CAACC,OAAb;AACH,GAdD;AAiBC,CApBL;;AAuBAvB,OAAO,CAACwB,WAAR,GAAsB,CAACtB,GAAD,EAAMC,GAAN,KAAa;AAC3BL,EAAAA,IAAI,CAAC2B,OAAL,GAAehB,IAAf,CAAoBiB,KAAK,IAAI;AACzBvB,IAAAA,GAAG,CAACQ,IAAJ,CAASe,KAAT;AACH,GAFD;AAGH,CAJL","sourcesContent":["const { request } = require('express');\r\nconst { User, Profile } = require('../db');\r\n\r\nexports.LoadById = (req, res) => { \r\nconst userId = req.params.userId\r\n         Profile.findOne({ where: { UserId: userId } })\r\n            .then(data => {\r\n                if (data) {\r\n                    res.send(data) \r\n                }\r\n            })\r\n            \r\n    \r\n            \r\n            .catch(error => {\r\n                throw new Error(error);\r\n            })\r\n    \r\n    \r\n}\r\n        \r\nexports.UpdateProfile = (req, res) => {\r\n    const userId = req.params.userId\r\n    const {UpdateData: updateData} = req.body\r\n    Profile.findOne({ where: { UserId: userId } })\r\n        .then((data) => {\r\n\r\n            return Profile.update({ data: { ...updateData }}\r\n                    , {where: { id: data.id } })\r\n        }).then(updateRecord => {\r\n            if (updateRecord == 1) {\r\n                res.send(updateRecord)\r\n            } else {\r\n                 throw new Error()\r\n            }\r\n        })\r\n        .catch(err => {\r\n        res.send(err.message)\r\n    })\r\n\r\n    \r\n    }\r\n\r\n    \r\nexports.getAllUsers = (req, res) =>{\r\n        User.findAll().then(users => {\r\n            res.send(users)\r\n        })\r\n    }"]},"metadata":{},"sourceType":"script"}