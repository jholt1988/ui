{"ast":null,"code":"\"use strict\";\n\nclass AbstractDialect {}\n\nAbstractDialect.prototype.supports = {\n  \"DEFAULT\": true,\n  \"DEFAULT VALUES\": false,\n  \"VALUES ()\": false,\n  \"LIMIT ON UPDATE\": false,\n  \"ON DUPLICATE KEY\": true,\n  \"ORDER NULLS\": false,\n  \"UNION\": true,\n  \"UNION ALL\": true,\n  \"RIGHT JOIN\": true,\n  returnValues: false,\n  autoIncrement: {\n    identityInsert: false,\n    defaultValue: true,\n    update: true\n  },\n  bulkDefault: false,\n  schemas: false,\n  transactions: true,\n  settingIsolationLevelDuringTransaction: true,\n  transactionOptions: {\n    type: false\n  },\n  migrations: true,\n  upserts: true,\n  inserts: {\n    ignoreDuplicates: \"\",\n    updateOnDuplicate: false,\n    onConflictDoNothing: \"\",\n    conflictFields: false\n  },\n  constraints: {\n    restrict: true,\n    addConstraint: true,\n    dropConstraint: true,\n    unique: true,\n    default: false,\n    check: true,\n    foreignKey: true,\n    primaryKey: true\n  },\n  index: {\n    collate: true,\n    length: false,\n    parser: false,\n    concurrently: false,\n    type: false,\n    using: true,\n    functionBased: false,\n    operator: false\n  },\n  groupedLimit: true,\n  indexViaAlter: false,\n  JSON: false,\n  deferrableConstraints: false\n};\nmodule.exports = AbstractDialect;\nmodule.exports.AbstractDialect = AbstractDialect;\nmodule.exports.default = AbstractDialect;","map":{"version":3,"mappings":";;AAEA,sBAAsB;;AAEtBA,gBAAgBC,SAAhB,CAA0BC,QAA1B,GAAqC;AACnC,aAAW,IADwB;AAEnC,oBAAkB,KAFiB;AAGnC,eAAa,KAHsB;AAInC,qBAAmB,KAJgB;AAKnC,sBAAoB,IALe;AAMnC,iBAAe,KANoB;AAOnC,WAAS,IAP0B;AAQnC,eAAa,IARsB;AASnC,gBAAc,IATqB;AAYnCC,gBAAc,KAZqB;AAenCC,iBAAe;AAEbC,oBAAgB,KAFH;AAKbC,kBAAc,IALD;AAQbC,YAAQ;AARK,GAfoB;AA0BnCC,eAAa,KA1BsB;AA2BnCC,WAAS,KA3B0B;AA4BnCC,gBAAc,IA5BqB;AA6BnCC,0CAAwC,IA7BL;AA8BnCC,sBAAoB;AAClBC,UAAM;AADY,GA9Be;AAiCnCC,cAAY,IAjCuB;AAkCnCC,WAAS,IAlC0B;AAmCnCC,WAAS;AACPC,sBAAkB,EADX;AAEPC,uBAAmB,KAFZ;AAGPC,yBAAqB,EAHd;AAIPC,oBAAgB;AAJT,GAnC0B;AAyCnCC,eAAa;AACXC,cAAU,IADC;AAEXC,mBAAe,IAFJ;AAGXC,oBAAgB,IAHL;AAIXC,YAAQ,IAJG;AAKXC,aAAS,KALE;AAMXC,WAAO,IANI;AAOXC,gBAAY,IAPD;AAQXC,gBAAY;AARD,GAzCsB;AAmDnCC,SAAO;AACLC,aAAS,IADJ;AAELC,YAAQ,KAFH;AAGLC,YAAQ,KAHH;AAILC,kBAAc,KAJT;AAKLrB,UAAM,KALD;AAMLsB,WAAO,IANF;AAOLC,mBAAe,KAPV;AAQLC,cAAU;AARL,GAnD4B;AA6DnCC,gBAAc,IA7DqB;AA8DnCC,iBAAe,KA9DoB;AA+DnCC,QAAM,KA/D6B;AAgEnCC,yBAAuB;AAhEY,CAArC;AAmEAC,OAAOC,OAAP,GAAiB3C,eAAjB;AACA0C,OAAOC,OAAP,CAAe3C,eAAf,GAAiCA,eAAjC;AACA0C,OAAOC,OAAP,CAAejB,OAAf,GAAyB1B,eAAzB","names":["AbstractDialect","prototype","supports","returnValues","autoIncrement","identityInsert","defaultValue","update","bulkDefault","schemas","transactions","settingIsolationLevelDuringTransaction","transactionOptions","type","migrations","upserts","inserts","ignoreDuplicates","updateOnDuplicate","onConflictDoNothing","conflictFields","constraints","restrict","addConstraint","dropConstraint","unique","default","check","foreignKey","primaryKey","index","collate","length","parser","concurrently","using","functionBased","operator","groupedLimit","indexViaAlter","JSON","deferrableConstraints","module","exports"],"sources":["C:\\Users\\jorda\\OneDrive\\Desktop\\berecoapp\\node_modules\\sequelize\\src\\dialects\\abstract\\index.js"],"sourcesContent":["'use strict';\n\nclass AbstractDialect {}\n\nAbstractDialect.prototype.supports = {\n  'DEFAULT': true,\n  'DEFAULT VALUES': false,\n  'VALUES ()': false,\n  'LIMIT ON UPDATE': false,\n  'ON DUPLICATE KEY': true,\n  'ORDER NULLS': false,\n  'UNION': true,\n  'UNION ALL': true,\n  'RIGHT JOIN': true,\n\n  /* does the dialect support returning values for inserted/updated fields */\n  returnValues: false,\n\n  /* features specific to autoIncrement values */\n  autoIncrement: {\n    /* does the dialect require modification of insert queries when inserting auto increment fields */\n    identityInsert: false,\n\n    /* does the dialect support inserting default/null values for autoincrement fields */\n    defaultValue: true,\n\n    /* does the dialect support updating autoincrement fields */\n    update: true\n  },\n  /* Do we need to say DEFAULT for bulk insert */\n  bulkDefault: false,\n  schemas: false,\n  transactions: true,\n  settingIsolationLevelDuringTransaction: true,\n  transactionOptions: {\n    type: false\n  },\n  migrations: true,\n  upserts: true,\n  inserts: {\n    ignoreDuplicates: '', /* dialect specific words for INSERT IGNORE or DO NOTHING */\n    updateOnDuplicate: false, /* whether dialect supports ON DUPLICATE KEY UPDATE */\n    onConflictDoNothing: '', /* dialect specific words for ON CONFLICT DO NOTHING */\n    conflictFields: false /* whether the dialect supports specifying conflict fields or not */\n  },\n  constraints: {\n    restrict: true,\n    addConstraint: true,\n    dropConstraint: true,\n    unique: true,\n    default: false,\n    check: true,\n    foreignKey: true,\n    primaryKey: true\n  },\n  index: {\n    collate: true,\n    length: false,\n    parser: false,\n    concurrently: false,\n    type: false,\n    using: true,\n    functionBased: false,\n    operator: false\n  },\n  groupedLimit: true,\n  indexViaAlter: false,\n  JSON: false,\n  deferrableConstraints: false\n};\n\nmodule.exports = AbstractDialect;\nmodule.exports.AbstractDialect = AbstractDialect;\nmodule.exports.default = AbstractDialect;\n"]},"metadata":{},"sourceType":"script"}