{"ast":null,"code":"\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst AbstractDialect = require(\"../abstract\");\n\nconst ConnectionManager = require(\"./connection-manager\");\n\nconst Query = require(\"./query\");\n\nconst QueryGenerator = require(\"./query-generator\");\n\nconst DataTypes = require(\"../../data-types\").db2;\n\nconst {\n  Db2QueryInterface\n} = require(\"./query-interface\");\n\nclass Db2Dialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new Db2QueryInterface(sequelize, this.queryGenerator);\n  }\n\n}\n\nDb2Dialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  \"DEFAULT\": true,\n  \"DEFAULT VALUES\": false,\n  \"VALUES ()\": false,\n  \"LIMIT ON UPDATE\": false,\n  \"ORDER NULLS\": false,\n  lock: false,\n  transactions: true,\n  migrations: false,\n  returnValues: false,\n  schemas: true,\n  finalTable: true,\n  autoIncrement: {\n    identityInsert: false,\n    defaultValue: false,\n    update: true\n  },\n  constraints: {\n    restrict: true,\n    default: false\n  },\n  index: {\n    collate: false,\n    length: false,\n    parser: false,\n    type: false,\n    using: false,\n    where: true\n  },\n  NUMERIC: true,\n  tmpTableTrigger: true\n});\nDb2Dialect.prototype.defaultVersion = \"1.0.0\";\nDb2Dialect.prototype.Query = Query;\nDb2Dialect.prototype.name = \"db2\";\nDb2Dialect.prototype.TICK_CHAR = '\"';\nDb2Dialect.prototype.TICK_CHAR_LEFT = '\"';\nDb2Dialect.prototype.TICK_CHAR_RIGHT = '\"';\nDb2Dialect.prototype.DataTypes = DataTypes;\nmodule.exports = Db2Dialect;","map":{"version":3,"mappings":";;AAEA,MAAMA,IAAIC,QAAQ,QAAR,CAAV;;AACA,MAAMC,kBAAkBD,QAAQ,aAAR,CAAxB;;AACA,MAAME,oBAAoBF,QAAQ,sBAAR,CAA1B;;AACA,MAAMG,QAAQH,QAAQ,SAAR,CAAd;;AACA,MAAMI,iBAAiBJ,QAAQ,mBAAR,CAAvB;;AACA,MAAMK,YAAYL,QAAQ,kBAAR,EAA4BM,GAA9C;;AACA,MAAM;AAAEC;AAAF,IAAwBP,QAAQ,mBAAR,CAA9B;;AAEA,yBAAyBC,eAAzB,CAAyC;AACvCO,cAAYC,SAAZ,EAAuB;AACrB;AACA,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,iBAAL,GAAyB,IAAIR,iBAAJ,CAAsB,IAAtB,EAA4BO,SAA5B,CAAzB;AACA,SAAKE,cAAL,GAAsB,IAAIP,cAAJ,CAAmB;AACvCQ,gBAAU,IAD6B;AAEvCH;AAFuC,KAAnB,CAAtB;AAIA,SAAKI,cAAL,GAAsB,IAAIN,iBAAJ,CAAsBE,SAAtB,EAAiC,KAAKE,cAAtC,CAAtB;AAA4D;;AATvB;;AAazCG,WAAWC,SAAX,CAAqBC,QAArB,GAAgCjB,EAAEkB,KAAF,CAAQlB,EAAEmB,SAAF,CAAYjB,gBAAgBc,SAAhB,CAA0BC,QAAtC,CAAR,EAAyD;AACvF,aAAW,IAD4E;AAEvF,oBAAkB,KAFqE;AAGvF,eAAa,KAH0E;AAIvF,qBAAmB,KAJoE;AAKvF,iBAAe,KALwE;AAMvFG,QAAM,KANiF;AAOvFC,gBAAc,IAPyE;AAQvFC,cAAY,KAR2E;AASvFC,gBAAc,KATyE;AAUvFC,WAAS,IAV8E;AAWvFC,cAAY,IAX2E;AAYvFC,iBAAe;AACbC,oBAAgB,KADH;AAEbC,kBAAc,KAFD;AAGbC,YAAQ;AAHK,GAZwE;AAiBvFC,eAAa;AACXC,cAAU,IADC;AAEXC,aAAS;AAFE,GAjB0E;AAqBvFC,SAAO;AACLC,aAAS,KADJ;AAELC,YAAQ,KAFH;AAGLC,YAAQ,KAHH;AAILC,UAAM,KAJD;AAKLC,WAAO,KALF;AAMLC,WAAO;AANF,GArBgF;AA6BvFC,WAAS,IA7B8E;AA8BvFC,mBAAiB;AA9BsE,CAAzD,CAAhC;AAiCA1B,WAAWC,SAAX,CAAqB0B,cAArB,GAAsC,OAAtC;AACA3B,WAAWC,SAAX,CAAqBZ,KAArB,GAA6BA,KAA7B;AACAW,WAAWC,SAAX,CAAqB2B,IAArB,GAA4B,KAA5B;AACA5B,WAAWC,SAAX,CAAqB4B,SAArB,GAAiC,GAAjC;AACA7B,WAAWC,SAAX,CAAqB6B,cAArB,GAAsC,GAAtC;AACA9B,WAAWC,SAAX,CAAqB8B,eAArB,GAAuC,GAAvC;AACA/B,WAAWC,SAAX,CAAqBV,SAArB,GAAiCA,SAAjC;AAEAyC,OAAOC,OAAP,GAAiBjC,UAAjB","names":["_","require","AbstractDialect","ConnectionManager","Query","QueryGenerator","DataTypes","db2","Db2QueryInterface","constructor","sequelize","connectionManager","queryGenerator","_dialect","queryInterface","Db2Dialect","prototype","supports","merge","cloneDeep","lock","transactions","migrations","returnValues","schemas","finalTable","autoIncrement","identityInsert","defaultValue","update","constraints","restrict","default","index","collate","length","parser","type","using","where","NUMERIC","tmpTableTrigger","defaultVersion","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports"],"sources":["C:\\Users\\jorda\\OneDrive\\Desktop\\berecoapp\\node_modules\\sequelize\\src\\dialects\\db2\\index.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').db2;\nconst { Db2QueryInterface } = require('./query-interface');\n\nclass Db2Dialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new Db2QueryInterface(sequelize, this.queryGenerator);\n  }\n}\n\nDb2Dialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  'DEFAULT': true,\n  'DEFAULT VALUES': false,\n  'VALUES ()': false,\n  'LIMIT ON UPDATE': false,\n  'ORDER NULLS': false,\n  lock: false,\n  transactions: true,\n  migrations: false,\n  returnValues: false,\n  schemas: true,\n  finalTable: true,\n  autoIncrement: {\n    identityInsert: false,\n    defaultValue: false,\n    update: true\n  },\n  constraints: {\n    restrict: true,\n    default: false\n  },\n  index: {\n    collate: false,\n    length: false,\n    parser: false,\n    type: false,\n    using: false,\n    where: true\n  },\n  NUMERIC: true,\n  tmpTableTrigger: true\n});\n\nDb2Dialect.prototype.defaultVersion = '1.0.0'; // Db2 supported version comes here\nDb2Dialect.prototype.Query = Query;\nDb2Dialect.prototype.name = 'db2';\nDb2Dialect.prototype.TICK_CHAR = '\"';\nDb2Dialect.prototype.TICK_CHAR_LEFT = '\"';\nDb2Dialect.prototype.TICK_CHAR_RIGHT = '\"';\nDb2Dialect.prototype.DataTypes = DataTypes;\n\nmodule.exports = Db2Dialect;\n"]},"metadata":{},"sourceType":"script"}